package com.dotin.tfbita.domain;

import static com.dotin.tfbita.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class CreditTypeConditionInfoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCreditTypeConditionInfoAllPropertiesEquals(CreditTypeConditionInfo expected, CreditTypeConditionInfo actual) {
        assertCreditTypeConditionInfoAutoGeneratedPropertiesEquals(expected, actual);
        assertCreditTypeConditionInfoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCreditTypeConditionInfoAllUpdatablePropertiesEquals(
        CreditTypeConditionInfo expected,
        CreditTypeConditionInfo actual
    ) {
        assertCreditTypeConditionInfoUpdatableFieldsEquals(expected, actual);
        assertCreditTypeConditionInfoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCreditTypeConditionInfoAutoGeneratedPropertiesEquals(
        CreditTypeConditionInfo expected,
        CreditTypeConditionInfo actual
    ) {
        assertThat(expected)
            .as("Verify CreditTypeConditionInfo auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCreditTypeConditionInfoUpdatableFieldsEquals(
        CreditTypeConditionInfo expected,
        CreditTypeConditionInfo actual
    ) {
        assertThat(expected)
            .as("Verify CreditTypeConditionInfo relevant properties")
            .satisfies(e -> assertThat(e.getDurationFrom()).as("check durationFrom").isEqualTo(actual.getDurationFrom()))
            .satisfies(e -> assertThat(e.getDurationTo()).as("check durationTo").isEqualTo(actual.getDurationTo()))
            .satisfies(
                e ->
                    assertThat(e.getPriceFrom()).as("check priceFrom").usingComparator(bigDecimalCompareTo).isEqualTo(actual.getPriceFrom())
            )
            .satisfies(
                e -> assertThat(e.getPriceTo()).as("check priceTo").usingComparator(bigDecimalCompareTo).isEqualTo(actual.getPriceTo())
            )
            .satisfies(
                e ->
                    assertThat(e.getJustificationDisciplinaryTopic())
                        .as("check justificationDisciplinaryTopic")
                        .isEqualTo(actual.getJustificationDisciplinaryTopic())
            )
            .satisfies(
                e ->
                    assertThat(e.getOpenDraftDisciplinaryTopic())
                        .as("check openDraftDisciplinaryTopic")
                        .isEqualTo(actual.getOpenDraftDisciplinaryTopic())
            )
            .satisfies(e -> assertThat(e.getOtherCostsTopic()).as("check otherCostsTopic").isEqualTo(actual.getOtherCostsTopic()))
            .satisfies(
                e ->
                    assertThat(e.getPostTelegraphSwiftCostsTopic())
                        .as("check postTelegraphSwiftCostsTopic")
                        .isEqualTo(actual.getPostTelegraphSwiftCostsTopic())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCreditTypeConditionInfoUpdatableRelationshipsEquals(
        CreditTypeConditionInfo expected,
        CreditTypeConditionInfo actual
    ) {
        assertThat(expected)
            .as("Verify CreditTypeConditionInfo relationships")
            .satisfies(e -> assertThat(e.getDefaultCondition()).as("check defaultCondition").isEqualTo(actual.getDefaultCondition()));
    }
}
