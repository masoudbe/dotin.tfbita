package com.dotin.tfbita.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DraftAccountInfoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftAccountInfoAllPropertiesEquals(DraftAccountInfo expected, DraftAccountInfo actual) {
        assertDraftAccountInfoAutoGeneratedPropertiesEquals(expected, actual);
        assertDraftAccountInfoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftAccountInfoAllUpdatablePropertiesEquals(DraftAccountInfo expected, DraftAccountInfo actual) {
        assertDraftAccountInfoUpdatableFieldsEquals(expected, actual);
        assertDraftAccountInfoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftAccountInfoAutoGeneratedPropertiesEquals(DraftAccountInfo expected, DraftAccountInfo actual) {
        assertThat(expected)
            .as("Verify DraftAccountInfo auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftAccountInfoUpdatableFieldsEquals(DraftAccountInfo expected, DraftAccountInfo actual) {
        assertThat(expected)
            .as("Verify DraftAccountInfo relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getDocumentReceiptDisciplinaryAccountId())
                        .as("check documentReceiptDisciplinaryAccountId")
                        .isEqualTo(actual.getDocumentReceiptDisciplinaryAccountId())
            )
            .satisfies(e -> assertThat(e.getDraftMainAccountId()).as("check draftMainAccountId").isEqualTo(actual.getDraftMainAccountId()))
            .satisfies(
                e ->
                    assertThat(e.getInsuranceCostAccountId())
                        .as("check insuranceCostAccountId")
                        .isEqualTo(actual.getInsuranceCostAccountId())
            )
            .satisfies(
                e ->
                    assertThat(e.getJustificationDisciplinaryAccountId())
                        .as("check justificationDisciplinaryAccountId")
                        .isEqualTo(actual.getJustificationDisciplinaryAccountId())
            )
            .satisfies(
                e ->
                    assertThat(e.getOpenDraftDisciplinaryAccountId())
                        .as("check openDraftDisciplinaryAccountId")
                        .isEqualTo(actual.getOpenDraftDisciplinaryAccountId())
            )
            .satisfies(
                e -> assertThat(e.getOtherCostsAccountId()).as("check otherCostsAccountId").isEqualTo(actual.getOtherCostsAccountId())
            )
            .satisfies(
                e ->
                    assertThat(e.getPostSwiftCostsAccountId())
                        .as("check postSwiftCostsAccountId")
                        .isEqualTo(actual.getPostSwiftCostsAccountId())
            )
            .satisfies(
                e ->
                    assertThat(e.getAmountDeductionAccountId())
                        .as("check amountDeductionAccountId")
                        .isEqualTo(actual.getAmountDeductionAccountId())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftAccountInfoUpdatableRelationshipsEquals(DraftAccountInfo expected, DraftAccountInfo actual) {}
}
