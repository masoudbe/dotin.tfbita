package com.dotin.tfbita.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DraftCertificateTypeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftCertificateTypeAllPropertiesEquals(DraftCertificateType expected, DraftCertificateType actual) {
        assertDraftCertificateTypeAutoGeneratedPropertiesEquals(expected, actual);
        assertDraftCertificateTypeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftCertificateTypeAllUpdatablePropertiesEquals(DraftCertificateType expected, DraftCertificateType actual) {
        assertDraftCertificateTypeUpdatableFieldsEquals(expected, actual);
        assertDraftCertificateTypeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftCertificateTypeAutoGeneratedPropertiesEquals(DraftCertificateType expected, DraftCertificateType actual) {
        assertThat(expected)
            .as("Verify DraftCertificateType auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftCertificateTypeUpdatableFieldsEquals(DraftCertificateType expected, DraftCertificateType actual) {
        assertThat(expected)
            .as("Verify DraftCertificateType relevant properties")
            .satisfies(e -> assertThat(e.getMandatory()).as("check mandatory").isEqualTo(actual.getMandatory()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftCertificateTypeUpdatableRelationshipsEquals(DraftCertificateType expected, DraftCertificateType actual) {
        assertThat(expected)
            .as("Verify DraftCertificateType relationships")
            .satisfies(e -> assertThat(e.getDraftRequestType()).as("check draftRequestType").isEqualTo(actual.getDraftRequestType()));
    }
}
