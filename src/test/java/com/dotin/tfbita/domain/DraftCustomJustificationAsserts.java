package com.dotin.tfbita.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DraftCustomJustificationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftCustomJustificationAllPropertiesEquals(
        DraftCustomJustification expected,
        DraftCustomJustification actual
    ) {
        assertDraftCustomJustificationAutoGeneratedPropertiesEquals(expected, actual);
        assertDraftCustomJustificationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftCustomJustificationAllUpdatablePropertiesEquals(
        DraftCustomJustification expected,
        DraftCustomJustification actual
    ) {
        assertDraftCustomJustificationUpdatableFieldsEquals(expected, actual);
        assertDraftCustomJustificationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftCustomJustificationAutoGeneratedPropertiesEquals(
        DraftCustomJustification expected,
        DraftCustomJustification actual
    ) {
        assertThat(expected)
            .as("Verify DraftCustomJustification auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftCustomJustificationUpdatableFieldsEquals(
        DraftCustomJustification expected,
        DraftCustomJustification actual
    ) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftCustomJustificationUpdatableRelationshipsEquals(
        DraftCustomJustification expected,
        DraftCustomJustification actual
    ) {
        assertThat(expected)
            .as("Verify DraftCustomJustification relationships")
            .satisfies(e -> assertThat(e.getDraftReceipts()).as("check draftReceipts").isEqualTo(actual.getDraftReceipts()))
            .satisfies(
                e -> assertThat(e.getDraftJustifications()).as("check draftJustifications").isEqualTo(actual.getDraftJustifications())
            );
    }
}
