package com.dotin.tfbita.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DraftDocumentTransactionContainerAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftDocumentTransactionContainerAllPropertiesEquals(
        DraftDocumentTransactionContainer expected,
        DraftDocumentTransactionContainer actual
    ) {
        assertDraftDocumentTransactionContainerAutoGeneratedPropertiesEquals(expected, actual);
        assertDraftDocumentTransactionContainerAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftDocumentTransactionContainerAllUpdatablePropertiesEquals(
        DraftDocumentTransactionContainer expected,
        DraftDocumentTransactionContainer actual
    ) {
        assertDraftDocumentTransactionContainerUpdatableFieldsEquals(expected, actual);
        assertDraftDocumentTransactionContainerUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftDocumentTransactionContainerAutoGeneratedPropertiesEquals(
        DraftDocumentTransactionContainer expected,
        DraftDocumentTransactionContainer actual
    ) {
        assertThat(expected)
            .as("Verify DraftDocumentTransactionContainer auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftDocumentTransactionContainerUpdatableFieldsEquals(
        DraftDocumentTransactionContainer expected,
        DraftDocumentTransactionContainer actual
    ) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftDocumentTransactionContainerUpdatableRelationshipsEquals(
        DraftDocumentTransactionContainer expected,
        DraftDocumentTransactionContainer actual
    ) {
        assertThat(expected)
            .as("Verify DraftDocumentTransactionContainer relationships")
            .satisfies(
                e ->
                    assertThat(e.getIssueCommissionDocumentTransaction())
                        .as("check issueCommissionDocumentTransaction")
                        .isEqualTo(actual.getIssueCommissionDocumentTransaction())
            )
            .satisfies(
                e ->
                    assertThat(e.getPaymentDocumentTransaction())
                        .as("check paymentDocumentTransaction")
                        .isEqualTo(actual.getPaymentDocumentTransaction())
            )
            .satisfies(
                e ->
                    assertThat(e.getSettleDocumentTransaction())
                        .as("check settleDocumentTransaction")
                        .isEqualTo(actual.getSettleDocumentTransaction())
            )
            .satisfies(
                e ->
                    assertThat(e.getSettleExcessDocumentTransaction())
                        .as("check settleExcessDocumentTransaction")
                        .isEqualTo(actual.getSettleExcessDocumentTransaction())
            )
            .satisfies(
                e ->
                    assertThat(e.getCommissionDeleteDraftDocumentTransaction())
                        .as("check commissionDeleteDraftDocumentTransaction")
                        .isEqualTo(actual.getCommissionDeleteDraftDocumentTransaction())
            )
            .satisfies(
                e ->
                    assertThat(e.getCommissionDraftExtendDocumentTransaction())
                        .as("check commissionDraftExtendDocumentTransaction")
                        .isEqualTo(actual.getCommissionDraftExtendDocumentTransaction())
            )
            .satisfies(e -> assertThat(e.getDrafts()).as("check drafts").isEqualTo(actual.getDrafts()));
    }
}
