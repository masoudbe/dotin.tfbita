package com.dotin.tfbita.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DraftProductInfoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftProductInfoAllPropertiesEquals(DraftProductInfo expected, DraftProductInfo actual) {
        assertDraftProductInfoAutoGeneratedPropertiesEquals(expected, actual);
        assertDraftProductInfoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftProductInfoAllUpdatablePropertiesEquals(DraftProductInfo expected, DraftProductInfo actual) {
        assertDraftProductInfoUpdatableFieldsEquals(expected, actual);
        assertDraftProductInfoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftProductInfoAutoGeneratedPropertiesEquals(DraftProductInfo expected, DraftProductInfo actual) {
        assertThat(expected)
            .as("Verify DraftProductInfo auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftProductInfoUpdatableFieldsEquals(DraftProductInfo expected, DraftProductInfo actual) {
        assertThat(expected)
            .as("Verify DraftProductInfo relevant properties")
            .satisfies(e -> assertThat(e.getProductAmount()).as("check productAmount").isEqualTo(actual.getProductAmount()))
            .satisfies(e -> assertThat(e.getProductDimension()).as("check productDimension").isEqualTo(actual.getProductDimension()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftProductInfoUpdatableRelationshipsEquals(DraftProductInfo expected, DraftProductInfo actual) {
        assertThat(expected)
            .as("Verify DraftProductInfo relationships")
            .satisfies(e -> assertThat(e.getProduct()).as("check product").isEqualTo(actual.getProduct()))
            .satisfies(e -> assertThat(e.getDraftReceipt()).as("check draftReceipt").isEqualTo(actual.getDraftReceipt()));
    }
}
