package com.dotin.tfbita.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DraftReceiptDocumentTransactionContainerAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftReceiptDocumentTransactionContainerAllPropertiesEquals(
        DraftReceiptDocumentTransactionContainer expected,
        DraftReceiptDocumentTransactionContainer actual
    ) {
        assertDraftReceiptDocumentTransactionContainerAutoGeneratedPropertiesEquals(expected, actual);
        assertDraftReceiptDocumentTransactionContainerAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftReceiptDocumentTransactionContainerAllUpdatablePropertiesEquals(
        DraftReceiptDocumentTransactionContainer expected,
        DraftReceiptDocumentTransactionContainer actual
    ) {
        assertDraftReceiptDocumentTransactionContainerUpdatableFieldsEquals(expected, actual);
        assertDraftReceiptDocumentTransactionContainerUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftReceiptDocumentTransactionContainerAutoGeneratedPropertiesEquals(
        DraftReceiptDocumentTransactionContainer expected,
        DraftReceiptDocumentTransactionContainer actual
    ) {
        assertThat(expected)
            .as("Verify DraftReceiptDocumentTransactionContainer auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftReceiptDocumentTransactionContainerUpdatableFieldsEquals(
        DraftReceiptDocumentTransactionContainer expected,
        DraftReceiptDocumentTransactionContainer actual
    ) {
        assertThat(expected)
            .as("Verify DraftReceiptDocumentTransactionContainer relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getReceiveReceiptCommission())
                        .as("check receiveReceiptCommission")
                        .isEqualTo(actual.getReceiveReceiptCommission())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDraftReceiptDocumentTransactionContainerUpdatableRelationshipsEquals(
        DraftReceiptDocumentTransactionContainer expected,
        DraftReceiptDocumentTransactionContainer actual
    ) {
        assertThat(expected)
            .as("Verify DraftReceiptDocumentTransactionContainer relationships")
            .satisfies(
                e ->
                    assertThat(e.getReceiptIssueDocumentTransaction())
                        .as("check receiptIssueDocumentTransaction")
                        .isEqualTo(actual.getReceiptIssueDocumentTransaction())
            )
            .satisfies(
                e ->
                    assertThat(e.getFreightLetterStampCostDocumentTransaction())
                        .as("check freightLetterStampCostDocumentTransaction")
                        .isEqualTo(actual.getFreightLetterStampCostDocumentTransaction())
            )
            .satisfies(
                e ->
                    assertThat(e.getDeliverDocumentTransaction())
                        .as("check deliverDocumentTransaction")
                        .isEqualTo(actual.getDeliverDocumentTransaction())
            )
            .satisfies(
                e ->
                    assertThat(e.getDocumentTransactionCanceledDeliver())
                        .as("check documentTransactionCanceledDeliver")
                        .isEqualTo(actual.getDocumentTransactionCanceledDeliver())
            )
            .satisfies(
                e ->
                    assertThat(e.getDocumentTransactionCanceledReceiptIssue())
                        .as("check documentTransactionCanceledReceiptIssue")
                        .isEqualTo(actual.getDocumentTransactionCanceledReceiptIssue())
            )
            .satisfies(
                e ->
                    assertThat(e.getReceiptCommissionDocumentTransactions())
                        .as("check receiptCommissionDocumentTransactions")
                        .isEqualTo(actual.getReceiptCommissionDocumentTransactions())
            )
            .satisfies(
                e ->
                    assertThat(e.getDraftDocumentTransactionContainer())
                        .as("check draftDocumentTransactionContainer")
                        .isEqualTo(actual.getDraftDocumentTransactionContainer())
            );
    }
}
