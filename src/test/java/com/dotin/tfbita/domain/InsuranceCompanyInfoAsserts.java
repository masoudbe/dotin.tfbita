package com.dotin.tfbita.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InsuranceCompanyInfoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsuranceCompanyInfoAllPropertiesEquals(InsuranceCompanyInfo expected, InsuranceCompanyInfo actual) {
        assertInsuranceCompanyInfoAutoGeneratedPropertiesEquals(expected, actual);
        assertInsuranceCompanyInfoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsuranceCompanyInfoAllUpdatablePropertiesEquals(InsuranceCompanyInfo expected, InsuranceCompanyInfo actual) {
        assertInsuranceCompanyInfoUpdatableFieldsEquals(expected, actual);
        assertInsuranceCompanyInfoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsuranceCompanyInfoAutoGeneratedPropertiesEquals(InsuranceCompanyInfo expected, InsuranceCompanyInfo actual) {
        assertThat(expected)
            .as("Verify InsuranceCompanyInfo auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsuranceCompanyInfoUpdatableFieldsEquals(InsuranceCompanyInfo expected, InsuranceCompanyInfo actual) {
        assertThat(expected)
            .as("Verify InsuranceCompanyInfo relevant properties")
            .satisfies(e -> assertThat(e.getModificationDate()).as("check modificationDate").isEqualTo(actual.getModificationDate()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsuranceCompanyInfoUpdatableRelationshipsEquals(InsuranceCompanyInfo expected, InsuranceCompanyInfo actual) {}
}
