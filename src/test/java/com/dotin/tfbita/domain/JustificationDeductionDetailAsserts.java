package com.dotin.tfbita.domain;

import static com.dotin.tfbita.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class JustificationDeductionDetailAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJustificationDeductionDetailAllPropertiesEquals(
        JustificationDeductionDetail expected,
        JustificationDeductionDetail actual
    ) {
        assertJustificationDeductionDetailAutoGeneratedPropertiesEquals(expected, actual);
        assertJustificationDeductionDetailAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJustificationDeductionDetailAllUpdatablePropertiesEquals(
        JustificationDeductionDetail expected,
        JustificationDeductionDetail actual
    ) {
        assertJustificationDeductionDetailUpdatableFieldsEquals(expected, actual);
        assertJustificationDeductionDetailUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJustificationDeductionDetailAutoGeneratedPropertiesEquals(
        JustificationDeductionDetail expected,
        JustificationDeductionDetail actual
    ) {
        assertThat(expected)
            .as("Verify JustificationDeductionDetail auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJustificationDeductionDetailUpdatableFieldsEquals(
        JustificationDeductionDetail expected,
        JustificationDeductionDetail actual
    ) {
        assertThat(expected)
            .as("Verify JustificationDeductionDetail relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getDeductionAmount())
                        .as("check deductionAmount")
                        .usingComparator(bigDecimalCompareTo)
                        .isEqualTo(actual.getDeductionAmount())
            )
            .satisfies(
                e ->
                    assertThat(e.getEquivalentDeductionAmount())
                        .as("check equivalentDeductionAmount")
                        .usingComparator(bigDecimalCompareTo)
                        .isEqualTo(actual.getEquivalentDeductionAmount())
            )
            .satisfies(
                e -> assertThat(e.getReceiveCurrencyCode()).as("check receiveCurrencyCode").isEqualTo(actual.getReceiveCurrencyCode())
            )
            .satisfies(e -> assertThat(e.getComment()).as("check comment").isEqualTo(actual.getComment()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJustificationDeductionDetailUpdatableRelationshipsEquals(
        JustificationDeductionDetail expected,
        JustificationDeductionDetail actual
    ) {
        assertThat(expected)
            .as("Verify JustificationDeductionDetail relationships")
            .satisfies(e -> assertThat(e.getDeductionReason()).as("check deductionReason").isEqualTo(actual.getDeductionReason()))
            .satisfies(
                e ->
                    assertThat(e.getJustificationDeductionAmount())
                        .as("check justificationDeductionAmount")
                        .isEqualTo(actual.getJustificationDeductionAmount())
            );
    }
}
