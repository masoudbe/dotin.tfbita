package com.dotin.tfbita.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ObjectiveCategoryElementAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObjectiveCategoryElementAllPropertiesEquals(
        ObjectiveCategoryElement expected,
        ObjectiveCategoryElement actual
    ) {
        assertObjectiveCategoryElementAutoGeneratedPropertiesEquals(expected, actual);
        assertObjectiveCategoryElementAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObjectiveCategoryElementAllUpdatablePropertiesEquals(
        ObjectiveCategoryElement expected,
        ObjectiveCategoryElement actual
    ) {
        assertObjectiveCategoryElementUpdatableFieldsEquals(expected, actual);
        assertObjectiveCategoryElementUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObjectiveCategoryElementAutoGeneratedPropertiesEquals(
        ObjectiveCategoryElement expected,
        ObjectiveCategoryElement actual
    ) {
        assertThat(expected)
            .as("Verify ObjectiveCategoryElement auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObjectiveCategoryElementUpdatableFieldsEquals(
        ObjectiveCategoryElement expected,
        ObjectiveCategoryElement actual
    ) {
        assertThat(expected)
            .as("Verify ObjectiveCategoryElement relevant properties")
            .satisfies(e -> assertThat(e.getEntityClass()).as("check entityClass").isEqualTo(actual.getEntityClass()))
            .satisfies(e -> assertThat(e.getEntityId()).as("check entityId").isEqualTo(actual.getEntityId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObjectiveCategoryElementUpdatableRelationshipsEquals(
        ObjectiveCategoryElement expected,
        ObjectiveCategoryElement actual
    ) {
        assertThat(expected)
            .as("Verify ObjectiveCategoryElement relationships")
            .satisfies(e -> assertThat(e.getObjectiveCategory()).as("check objectiveCategory").isEqualTo(actual.getObjectiveCategory()));
    }
}
