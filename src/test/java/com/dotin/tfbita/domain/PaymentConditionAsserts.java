package com.dotin.tfbita.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PaymentConditionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentConditionAllPropertiesEquals(PaymentCondition expected, PaymentCondition actual) {
        assertPaymentConditionAutoGeneratedPropertiesEquals(expected, actual);
        assertPaymentConditionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentConditionAllUpdatablePropertiesEquals(PaymentCondition expected, PaymentCondition actual) {
        assertPaymentConditionUpdatableFieldsEquals(expected, actual);
        assertPaymentConditionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentConditionAutoGeneratedPropertiesEquals(PaymentCondition expected, PaymentCondition actual) {
        assertThat(expected)
            .as("Verify PaymentCondition auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentConditionUpdatableFieldsEquals(PaymentCondition expected, PaymentCondition actual) {
        assertThat(expected)
            .as("Verify PaymentCondition relevant properties")
            .satisfies(e -> assertThat(e.getLatinName()).as("check latinName").isEqualTo(actual.getLatinName()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentConditionUpdatableRelationshipsEquals(PaymentCondition expected, PaymentCondition actual) {}
}
