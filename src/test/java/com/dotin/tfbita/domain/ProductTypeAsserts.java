package com.dotin.tfbita.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProductTypeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductTypeAllPropertiesEquals(ProductType expected, ProductType actual) {
        assertProductTypeAutoGeneratedPropertiesEquals(expected, actual);
        assertProductTypeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductTypeAllUpdatablePropertiesEquals(ProductType expected, ProductType actual) {
        assertProductTypeUpdatableFieldsEquals(expected, actual);
        assertProductTypeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductTypeAutoGeneratedPropertiesEquals(ProductType expected, ProductType actual) {
        assertThat(expected)
            .as("Verify ProductType auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductTypeUpdatableFieldsEquals(ProductType expected, ProductType actual) {
        assertThat(expected)
            .as("Verify ProductType relevant properties")
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getModificationDate()).as("check modificationDate").isEqualTo(actual.getModificationDate()))
            .satisfies(e -> assertThat(e.getTopicCode()).as("check topicCode").isEqualTo(actual.getTopicCode()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductTypeUpdatableRelationshipsEquals(ProductType expected, ProductType actual) {
        assertThat(expected)
            .as("Verify ProductType relationships")
            .satisfies(
                e -> assertThat(e.getProductTypeAttributes()).as("check productTypeAttributes").isEqualTo(actual.getProductTypeAttributes())
            );
    }
}
