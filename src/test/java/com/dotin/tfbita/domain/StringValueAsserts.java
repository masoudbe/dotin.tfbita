package com.dotin.tfbita.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StringValueAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStringValueAllPropertiesEquals(StringValue expected, StringValue actual) {
        assertStringValueAutoGeneratedPropertiesEquals(expected, actual);
        assertStringValueAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStringValueAllUpdatablePropertiesEquals(StringValue expected, StringValue actual) {
        assertStringValueUpdatableFieldsEquals(expected, actual);
        assertStringValueUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStringValueAutoGeneratedPropertiesEquals(StringValue expected, StringValue actual) {
        assertThat(expected)
            .as("Verify StringValue auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStringValueUpdatableFieldsEquals(StringValue expected, StringValue actual) {
        assertThat(expected)
            .as("Verify StringValue relevant properties")
            .satisfies(e -> assertThat(e.getVal()).as("check val").isEqualTo(actual.getVal()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStringValueUpdatableRelationshipsEquals(StringValue expected, StringValue actual) {
        assertThat(expected)
            .as("Verify StringValue relationships")
            .satisfies(
                e ->
                    assertThat(e.getOrderRegistrationInfos())
                        .as("check orderRegistrationInfos")
                        .isEqualTo(actual.getOrderRegistrationInfos())
            )
            .satisfies(e -> assertThat(e.getDrafts()).as("check drafts").isEqualTo(actual.getDrafts()))
            .satisfies(e -> assertThat(e.getDraftTypes()).as("check draftTypes").isEqualTo(actual.getDraftTypes()));
    }
}
