package com.dotin.tfbita.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SuggestedSanctionInfoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSuggestedSanctionInfoAllPropertiesEquals(SuggestedSanctionInfo expected, SuggestedSanctionInfo actual) {
        assertSuggestedSanctionInfoAutoGeneratedPropertiesEquals(expected, actual);
        assertSuggestedSanctionInfoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSuggestedSanctionInfoAllUpdatablePropertiesEquals(
        SuggestedSanctionInfo expected,
        SuggestedSanctionInfo actual
    ) {
        assertSuggestedSanctionInfoUpdatableFieldsEquals(expected, actual);
        assertSuggestedSanctionInfoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSuggestedSanctionInfoAutoGeneratedPropertiesEquals(
        SuggestedSanctionInfo expected,
        SuggestedSanctionInfo actual
    ) {
        assertThat(expected)
            .as("Verify SuggestedSanctionInfo auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSuggestedSanctionInfoUpdatableFieldsEquals(SuggestedSanctionInfo expected, SuggestedSanctionInfo actual) {
        assertThat(expected)
            .as("Verify SuggestedSanctionInfo relevant properties")
            .satisfies(e -> assertThat(e.getSanctionSerial()).as("check sanctionSerial").isEqualTo(actual.getSanctionSerial()))
            .satisfies(e -> assertThat(e.getPersonnelCode()).as("check personnelCode").isEqualTo(actual.getPersonnelCode()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSuggestedSanctionInfoUpdatableRelationshipsEquals(
        SuggestedSanctionInfo expected,
        SuggestedSanctionInfo actual
    ) {
        assertThat(expected)
            .as("Verify SuggestedSanctionInfo relationships")
            .satisfies(e -> assertThat(e.getDrafts()).as("check drafts").isEqualTo(actual.getDrafts()));
    }
}
