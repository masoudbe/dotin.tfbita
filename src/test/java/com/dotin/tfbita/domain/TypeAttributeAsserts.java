package com.dotin.tfbita.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TypeAttributeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTypeAttributeAllPropertiesEquals(TypeAttribute expected, TypeAttribute actual) {
        assertTypeAttributeAutoGeneratedPropertiesEquals(expected, actual);
        assertTypeAttributeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTypeAttributeAllUpdatablePropertiesEquals(TypeAttribute expected, TypeAttribute actual) {
        assertTypeAttributeUpdatableFieldsEquals(expected, actual);
        assertTypeAttributeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTypeAttributeAutoGeneratedPropertiesEquals(TypeAttribute expected, TypeAttribute actual) {
        assertThat(expected)
            .as("Verify TypeAttribute auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTypeAttributeUpdatableFieldsEquals(TypeAttribute expected, TypeAttribute actual) {
        assertThat(expected)
            .as("Verify TypeAttribute relevant properties")
            .satisfies(e -> assertThat(e.getNecessary()).as("check necessary").isEqualTo(actual.getNecessary()))
            .satisfies(e -> assertThat(e.getIsUnique()).as("check isUnique").isEqualTo(actual.getIsUnique()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTypeAttributeUpdatableRelationshipsEquals(TypeAttribute expected, TypeAttribute actual) {
        assertThat(expected)
            .as("Verify TypeAttribute relationships")
            .satisfies(e -> assertThat(e.getAttribute()).as("check attribute").isEqualTo(actual.getAttribute()))
            .satisfies(e -> assertThat(e.getProductTypes()).as("check productTypes").isEqualTo(actual.getProductTypes()));
    }
}
